<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.frank.blog.dao.mapper.BlogInfoMapper">
  <resultMap id="BaseResultMap" type="com.frank.blog.dao.model.BlogInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="pic_url" jdbcType="VARCHAR" property="picUrl" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="reply_count" jdbcType="INTEGER" property="replyCount" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_forw" jdbcType="INTEGER" property="isForw" />
    <result column="can_forw" jdbcType="INTEGER" property="canForw" />
    <result column="forw_user_id" jdbcType="INTEGER" property="forwUserId" />
    <result column="forw_blog_info_id" jdbcType="INTEGER" property="forwBlogInfoId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.frank.blog.dao.model.BlogInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, title, user_id, nick_name, pic_url, status, reply_count, like_count, create_time, 
    update_time, is_forw, can_forw, forw_user_id, forw_blog_info_id
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    content
  </sql>
  <select id="countByExample" parameterType="com.frank.blog.dao.model.BlogInfoExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from blog_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update blog_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.picUrl != null">
        pic_url = #{record.picUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.replyCount != null">
        reply_count = #{record.replyCount,jdbcType=INTEGER},
      </if>
      <if test="record.likeCount != null">
        like_count = #{record.likeCount,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isForw != null">
        is_forw = #{record.isForw,jdbcType=INTEGER},
      </if>
      <if test="record.canForw != null">
        can_forw = #{record.canForw,jdbcType=INTEGER},
      </if>
      <if test="record.forwUserId != null">
        forw_user_id = #{record.forwUserId,jdbcType=INTEGER},
      </if>
      <if test="record.forwBlogInfoId != null">
        forw_blog_info_id = #{record.forwBlogInfoId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update blog_info
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      reply_count = #{record.replyCount,jdbcType=INTEGER},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_forw = #{record.isForw,jdbcType=INTEGER},
      can_forw = #{record.canForw,jdbcType=INTEGER},
      forw_user_id = #{record.forwUserId,jdbcType=INTEGER},
      forw_blog_info_id = #{record.forwBlogInfoId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update blog_info
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      reply_count = #{record.replyCount,jdbcType=INTEGER},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_forw = #{record.isForw,jdbcType=INTEGER},
      can_forw = #{record.canForw,jdbcType=INTEGER},
      forw_user_id = #{record.forwUserId,jdbcType=INTEGER},
      forw_blog_info_id = #{record.forwBlogInfoId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.frank.blog.dao.model.BlogInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="pic_url" jdbcType="VARCHAR" property="picUrl" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="reply_count" jdbcType="INTEGER" property="replyCount" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_forw" jdbcType="INTEGER" property="isForw" />
    <result column="can_forw" jdbcType="INTEGER" property="canForw" />
    <result column="forw_user_id" jdbcType="INTEGER" property="forwUserId" />
    <result column="forw_blog_info_id" jdbcType="INTEGER" property="forwBlogInfoId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.frank.blog.dao.model.BlogInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, title, user_id, nick_name, pic_url, status, reply_count, like_count, create_time, 
    update_time, is_forw, can_forw, forw_user_id, forw_blog_info_id
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    content
  </sql>
  <select id="countByExample" parameterType="com.frank.blog.dao.model.BlogInfoExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from blog_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update blog_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.picUrl != null">
        pic_url = #{record.picUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.replyCount != null">
        reply_count = #{record.replyCount,jdbcType=INTEGER},
      </if>
      <if test="record.likeCount != null">
        like_count = #{record.likeCount,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isForw != null">
        is_forw = #{record.isForw,jdbcType=INTEGER},
      </if>
      <if test="record.canForw != null">
        can_forw = #{record.canForw,jdbcType=INTEGER},
      </if>
      <if test="record.forwUserId != null">
        forw_user_id = #{record.forwUserId,jdbcType=INTEGER},
      </if>
      <if test="record.forwBlogInfoId != null">
        forw_blog_info_id = #{record.forwBlogInfoId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update blog_info
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      reply_count = #{record.replyCount,jdbcType=INTEGER},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_forw = #{record.isForw,jdbcType=INTEGER},
      can_forw = #{record.canForw,jdbcType=INTEGER},
      forw_user_id = #{record.forwUserId,jdbcType=INTEGER},
      forw_blog_info_id = #{record.forwBlogInfoId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update blog_info
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      reply_count = #{record.replyCount,jdbcType=INTEGER},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_forw = #{record.isForw,jdbcType=INTEGER},
      can_forw = #{record.canForw,jdbcType=INTEGER},
      forw_user_id = #{record.forwUserId,jdbcType=INTEGER},
      forw_blog_info_id = #{record.forwBlogInfoId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.frank.blog.dao.model.BlogInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="pic_url" jdbcType="VARCHAR" property="picUrl" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="reply_count" jdbcType="INTEGER" property="replyCount" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_forw" jdbcType="INTEGER" property="isForw" />
    <result column="can_forw" jdbcType="INTEGER" property="canForw" />
    <result column="forw_user_id" jdbcType="INTEGER" property="forwUserId" />
    <result column="forw_blog_info_id" jdbcType="INTEGER" property="forwBlogInfoId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.frank.blog.dao.model.BlogInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, title, user_id, nick_name, pic_url, status, reply_count, like_count, create_time, 
    update_time, is_forw, can_forw, forw_user_id, forw_blog_info_id
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    content
  </sql>
  <select id="countByExample" parameterType="com.frank.blog.dao.model.BlogInfoExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from blog_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update blog_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.picUrl != null">
        pic_url = #{record.picUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.replyCount != null">
        reply_count = #{record.replyCount,jdbcType=INTEGER},
      </if>
      <if test="record.likeCount != null">
        like_count = #{record.likeCount,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isForw != null">
        is_forw = #{record.isForw,jdbcType=INTEGER},
      </if>
      <if test="record.canForw != null">
        can_forw = #{record.canForw,jdbcType=INTEGER},
      </if>
      <if test="record.forwUserId != null">
        forw_user_id = #{record.forwUserId,jdbcType=INTEGER},
      </if>
      <if test="record.forwBlogInfoId != null">
        forw_blog_info_id = #{record.forwBlogInfoId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update blog_info
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      reply_count = #{record.replyCount,jdbcType=INTEGER},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_forw = #{record.isForw,jdbcType=INTEGER},
      can_forw = #{record.canForw,jdbcType=INTEGER},
      forw_user_id = #{record.forwUserId,jdbcType=INTEGER},
      forw_blog_info_id = #{record.forwBlogInfoId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update blog_info
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      reply_count = #{record.replyCount,jdbcType=INTEGER},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_forw = #{record.isForw,jdbcType=INTEGER},
      can_forw = #{record.canForw,jdbcType=INTEGER},
      forw_user_id = #{record.forwUserId,jdbcType=INTEGER},
      forw_blog_info_id = #{record.forwBlogInfoId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>